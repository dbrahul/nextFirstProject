"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import StyledComponentsRegistry from "../lib/registry";
import Navbar from "@/components/navbar/Navbar";
import Sidebar from "@/components/sidebar/Sidebar";
import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import { AuthProvider, useAuth } from "../contexts/AuthContext";

const inter = Inter({ subsets: ["latin"] });

 const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function RootLayout({ children }: { children: React.ReactNode }) {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const toggleSidebar = () => {
    setSidebarOpen(!sidebarOpen);
  };

  const { user } = useAuth() as { user: null | { /* user properties */ }; login: (userData: any) => void; logout: () => void; };
  const router = useRouter();

  useEffect(() => {
    if (!user && router.pathname !== '/login') {
      router.push('/login');
    }
  }, [user, router]);

  if (!user && router.pathname !== '/login') {
    return null; // Or a loading spinner
  }

  return (
    <html lang="en">
      <body className={inter.className}>
        <Navbar toggleSidebar={toggleSidebar} />
        <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />
        <StyledComponentsRegistry>{children}</StyledComponentsRegistry>
      </body>
    </html>
  );
}

export default function App({ children }: { children: React.ReactNode }) {
  return (
    <AuthProvider>
      <RootLayout>{children}</RootLayout>
    </AuthProvider>
  );
}
